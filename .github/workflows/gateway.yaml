name: Development Environment

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: self-hosted
    timeout-minutes: 5

    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.DOCKER_USERNAME }}
      REGISTRY_PW: ${{ secrets.DOCKER_PASSWORD  }}
    steps:
      - uses: actions/checkout@v2
        name: checkout

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build
        run: ./scripts/build-image.sh gateway

      - name: Publish
        run: ./scripts/push-image.sh gateway

      - uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: install kubectl
        run: |
          sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl";
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl get pods
      - name: install vcluster
        run: |
         curl -L -o vcluster "https://github.com/loft-sh/vcluster/releases/latest/download/vcluster-linux-amd64" && sudo install -c -m 0755 vcluster /usr/local/bin && sudo rm -f vcluster
      - name: create vcluster for preview env
        run: |
         vcluster create gateway-dev-${{ github.actor_id }} --namespace preview-dev &

         vcluster connect gateway-dev-${{ github.actor_id }} --namespace preview-dev &
       
         sleep 10
         kubectl create ns gateway;
         kubectl run nginx --image nginx -n gateway;
      # - name: install YQ
      #   run: sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      # - uses: azure/setup-kubectl@v3
      #   id: install-kubectl
      # - name: update tenant name
      #   run: |

      #     yq e -i '.metadata.name = "gateway-dev-${{ github.actor_id }}-${{github.sha}}"' tenant.yaml
      #     yq e -i '.spec.owners[0].name = "dev-${{github.actor_id}}"' tenant.yaml
      #     cat tenant.yaml

      # # - uses: actions-hub/kubectl@master
      # #   env:
      # #     KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      # #   with:
      # #     args: |
      # #       create -f tenant.yaml

      # - uses: tale/kubectl-action@v1
      #   with:
      #     base64-kube-config: ${{ secrets.KUBE_CONFIG }}
      #     kubectl-version: v1.24.2

      # - name: create KUBECONFIG
      #   env:
      #     KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      #   run: |
      #     sudo ./create-user.sh "dev-${{github.actor_id}}" "gateway-dev-${{ github.actor_id }}-${{github.sha}}"

      # - uses: actions-hub/kubectl@master
      #   env:
      #     KUBE_CONFIG: dev-${{github.actor_id}}
      #   with:
      #     args: |
      #       create ns "gateway-dev-${{github.actor_id}}-${{github.sha}}"

      # - name: list files
      #   run: ls -lR

      - name: Artifacting KUBECONFIG Fille
        uses: actions/upload-artifact@v3
        with:
          name: 'dev-${{github.actor}}'
          path: ~/.kube/config

      # - uses: actions-hub/kubectl@master
      #   env:
      #     KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      #   with:
      #     args: |
      #       get tenants
      #       - uses: actions-hub/kubectl@master
      #       env:
      #         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      #       with:
      #         args: |
      #           delete tenant "gateway-dev-${{ github.actor_id }}-${{github.sha}}"
